name: "release"

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - nightly
      - develop
      - ci-init

# on:
#   repository_dispatch:
#     types: [on-demand-release]

jobs:
  publish-nautilus-trader:
    permissions:
      contents: write
    name: publish ${{ matrix.os }} (${{ matrix.arch-cpu.target-arch }} | ${{ matrix.arch-cpu.target-cpu }})
    # runs-on: ubuntu-latest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          # - ubuntu-24.04
          - ubuntu-22.04
          # - macos-latest
        arch-cpu:
          # > x86_64-unknown-linux-gnu
          - target-arch: x86_64-unknown-linux-gnu
            target-cpu: generic # 默认
          # - target-arch: x86_64-unknown-linux-gnu
          #   target-cpu: x86-64
          # - target-arch: x86_64-unknown-linux-gnu
          #   target-cpu: x86-64-v4
          # - target-arch: x86_64-unknown-linux-gnu
          #   target-cpu: cascadelake
          # - target-arch: x86_64-unknown-linux-gnu
          #   target-cpu: icelake-server
          # - target-arch: x86_64-unknown-linux-gnu
          #   target-cpu: skylake-avx512
          - target-arch: x86_64-unknown-linux-gnu
            target-cpu: sapphirerapids
          # - target-arch: x86_64-unknown-linux-gnu
          #   target-cpu: emeraldrapids

          # > aarch64-unknown-linux-gnu
          # - target-arch: aarch64-unknown-linux-gnu
          #   target-cpu: generic # 默认
          # - target-arch: aarch64-unknown-linux-gnu
          #   target-cpu: neoverse-n1 # Graviton2
          # - target-arch: aarch64-unknown-linux-gnu
          #   target-cpu: neoverse-v1 # Graviton3
          # - target-arch: aarch64-unknown-linux-gnu
          #   target-cpu: neoverse-v2 # Graviton4
    defaults:
      run:
        shell: bash
    env:
      BUILD_MODE: release
      # TARGET_ARCH: ${{ matrix.arch-cpu.target-arch }}
      # TARGET_CPU: ${{ matrix.arch-cpu.target-cpu }}
      # > --------------------------------------------------
      # > cargo
      CARGO_TARGET_DIR: ${{ github.workspace }}/.cache/cargo/target
      # CARGO_LOG: debug
      # CARGO_TERM_VERBOSE: true
      RUST_BACKTRACE: 1
      CARGO_BUILD_TARGET: ${{ matrix.arch-cpu.target-arch }}
      RUSTFLAGS: -C target-cpu=${{ matrix.arch-cpu.target-cpu }}
      # -Z tune-cpu=${{ matrix.arch-cpu.target-cpu }} # the option `Z` is only accepted on the nightly compiler
      # > --------------------------------------------------
      # > sccache
      # https://github.com/Mozilla-Actions/sccache-action
      SCCACHE_IDLE_TIMEOUT: 0
      SCCACHE_DIRECT: "true"
      SCCACHE_CACHE_MULTIARCH: 1
      SCCACHE_DIR: ${{ github.workspace }}/.cache/sccache
      RUSTC_WRAPPER: "sccache"
      CC: "sccache clang"
      CXX: "sccache clang++"
      # Incrementally compiled crates cannot be cached by sccache
      # https://github.com/mozilla/sccache#rust
      CARGO_INCREMENTAL: 0
    steps:
      - name: Checkout repository `self`
        uses: actions/checkout@v4

      - name: common-setup
        uses: ./.github/actions/common-setup
        with:
          python-version: "3.12"

      # > --------------------------------------------------
      # > Repository
      - name: Checkout repository `nautilus_trader`
        uses: actions/checkout@v4
        with:
          repository: nautechsystems/nautilus_trader
          ref: develop
          path: src

      # > --------------------------------------------------
      # > Debug
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true

      # - name: Debug
      #   run: |
      #     which yq
      #     yq --version

      # > --------------------------------------------------
      # > Build
      # - name: Update env vars
      #   run: |
      #     echo 'CARGO_BUILD_TARGET=${{ matrix.arch-cpu.target-arch }}' >> $GITHUB_ENV
      #     echo 'RUSTFLAGS=-C target-cpu=${{ matrix.arch-cpu.target-cpu }}' >> $GITHUB_ENV

      # - name: Print env vars
      #   run: |
      #     env | sort

      - name: Replace `build.py`
        run: |
          cp scripts/build.py src/build.py

      - name: Set version
        run: |
          base_version=$(yq -r '.tool.poetry.version' src/pyproject.toml)

          dev_version="dev$(date +%Y%m%d)+${GITHUB_RUN_NUMBER}"
          local_version="cpu.${{ matrix.arch-cpu.target-cpu }}"
          new_version="${base_version}.${dev_version}.${local_version}"

          poetry version --directory=src ${new_version}
          echo "RELEASE_VERSION=${base_version}.${dev_version}" >> $GITHUB_ENV

          echo "Set version to ${new_version}"

      # - name: Install NautilusTrader
      #   run: |
      #     pushd src
      #     poetry install
      #     popd

      - name: Build NautilusTrader
        run: |
          pushd src
          poetry build --format wheel
          popd

      - name: List dist
        run: |
          tree src/dist

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: src/dist/*
          tag_name: v${{ env.RELEASE_VERSION }}
          name: v${{ env.RELEASE_VERSION }}
