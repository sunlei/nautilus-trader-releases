name: "release"

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - nightly
      - develop
      - ci-init

# on:
#   repository_dispatch:
#     types: [on-demand-release]

jobs:
  publish-nautilus-trader:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      # > --------------------------------------------------
      # > sccache
      # https://github.com/Mozilla-Actions/sccache-action
      SCCACHE_IDLE_TIMEOUT: 0
      SCCACHE_DIRECT: "true"
      SCCACHE_CACHE_MULTIARCH: 1
      SCCACHE_DIR: ${{ github.workspace }}/.cache/sccache
      RUSTC_WRAPPER: "sccache"
      CC: "sccache clang"
      CXX: "sccache clang++"
      # Incrementally compiled crates cannot be cached by sccache
      # https://github.com/mozilla/sccache#rust
      CARGO_INCREMENTAL: 0
      # > --------------------------------------------------
    steps:
      # > --------------------------------------------------
      # > repository
      - name: Checkout repository `self`
        uses: actions/checkout@v4

      - name: Checkout repository `nautilus_trader``
        uses: actions/checkout@v4
        with:
          repository: nautechsystems/nautilus_trader
          ref: develop
          path: src

      # > --------------------------------------------------
      # > Rust
      - name: Cached cargo
        uses: actions/cache@v4
        # https://doc.rust-lang.org/cargo/guide/cargo-home.html#caching-the-cargo-home-in-ci
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      # - name: Set up Rust toolchain
      #   run: |
      #     rustup toolchain add --profile minimal stable --component clippy,rustfmt

      - name: Update Rust
        run: |
          rustup update stable

      # > --------------------------------------------------
      # > sccache
      - name: Cached sccache
        uses: actions/cache@v4
        with:
          path: ${{ env.SCCACHE_DIR }}
          key: sccache-${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock', '**/poetry.lock') }}
          restore-keys: |
            sccache-${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-
            sccache-${{ runner.os }}-${{ github.workflow }}-
            sccache-${{ runner.os }}-

      - name: Run sccache
        uses: mozilla-actions/sccache-action@v0.0.7

      # > --------------------------------------------------
      # > Python

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          # python-version: "3.13"
          python-version-file: "src/pyproject.toml"
          # python-version-file: ".python-version"
          # cache: "poetry"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install poetry
        run: pipx install poetry

      # > --------------------------------------------------
      # > Build

      - name: Install
        run: |
          pushd src
          poetry install
          popd

      - name: Build
        run: |
          pushd src
          poetry build --format wheel
          popd
